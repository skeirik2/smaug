--- file: interlude.maude
--- reqs: prelude.maude
--- note: a value-added prelude; the interlude is divided into several sections
--- Section 1: Prelude META-LEVEL sort refinements
--- Section 2: Prelude META-LEVEL projection/injection functions
--- Section 3: Prelude META-LEVEL predicates/auxiliary functions
--- Section 4: Prelude extended data-structures

fmod META-LEVEL-REFINEMENT is
  pr META-LEVEL .

  --- 1.a - refine Ne/TypeList by Ne/Sort/Kind/List
  sort NilQidList NeSortList NeKindList SortList KindList .
  --- List Functor Induced Subsorts
  subsort Sort < NeSortList < SortList .
  subsort Kind < NeKindList < KindList .
  --- List Functor Subsort-Induced Subsorts
  subsort NeSortList NeKindList < NeTypeList .
  subsort SortList KindList < TypeList .
  --- Preregularity Induced Subsort
  subsort NilQidList < SortList KindList .
  --- New QidList Operators
  op nil : -> NilQidList [ctor ditto] .
  op __ : NilQidList NilQidList -> NilQidList [ctor ditto] .
  op __ : SortList SortList -> SortList [ctor ditto] .
  op __ : NeSortList SortList -> NeSortList [ctor ditto] .
  op __ : SortList NeSortList -> NeSortList [ctor ditto] .
  op __ : KindList KindList -> KindList [ctor ditto] .
  op __ : NeKindList KindList -> NeKindList [ctor ditto] .
  op __ : KindList NeKindList -> NeKindList [ctor ditto] .

  --- 1.b - refine QidList by Ne/Variable/Constant/TermQidList
  sort VariableList ConstantList TermQidList .
  sort NeVariableList NeConstantList NeTermQidList .
  --- List Functor Induced Subsorts
  subsort Variable < NeVariableList < VariableList .
  subsort Constant < NeConstantList < ConstantList .
  subsort TermQid < NeTermQidList < TermQidList .
  --- List Functor Subsort-Induced Subsorts Set 1
  subsort VariableList ConstantList < TermQidList < QidList  .
  subsort NeVariableList NeConstantList < NeTermQidList < NeQidList .
  --- Preregularity Induced Subsort
  subsort NilQidList < ConstantList VariableList .
  --- New QidList operators
  op __ : TermQidList TermQidList -> TermQidList [ctor ditto] .
  op __ : NeTermQidList TermQidList -> NeTermQidList [ctor ditto] .
  op __ : TermQidList NeTermQidList -> NeTermQidList [ctor ditto] .
  op __ : ConstantList ConstantList -> ConstantList [ctor ditto] .
  op __ : NeConstantList ConstantList -> NeConstantList [ctor ditto] .
  op __ : ConstantList NeConstantList -> NeConstantList [ctor ditto] .
  op __ : VariableList VariableList -> VariableList [ctor ditto] .
  op __ : NeVariableList VariableList -> NeVariableList [ctor ditto] .
  op __ : VariableList NeVariableList -> NeVariableList [ctor ditto] .

  --- NOTE: Original bottom sort EmptyTypeSet is misleading;
  ---       renamed to EmptyQidSet; this renaming must also be
  ---       threaded through QidListSet below
  --- 1.c - refine QidSet by Ne/Variable/Constant/TermQidSet
  sort EmptyQidSet VariableSet ConstantSet TermQidSet .
  sort NeVariableSet NeConstantSet NeTermQidSet .
  --- Set Functor Induced Subsorts
  subsort Variable < NeVariableSet < VariableSet .
  subsort Constant < NeConstantSet < ConstantSet .
  subsort TermQid < NeTermQidSet < TermQidSet .
  --- Set Functor Subsort-Induced Subsorts
  subsort VariableSet ConstantSet < TermQidSet < QidSet .
  subsort NeVariableSet NeConstantSet < NeTermQidSet < NeQidSet .
  --- Preregularity Induced Subsort
  subsort EmptyQidSet < EmptyTypeSet < ConstantSet VariableSet .
  --- New QidSet operators
  op none : -> EmptyQidSet [ctor ditto] .
  op _;_ : EmptyQidSet EmptyQidSet -> EmptyQidSet [ctor ditto] .
  op _;_ : TermQidSet TermQidSet -> TermQidSet [ctor ditto] .
  op _;_ : NeTermQidSet TermQidSet -> NeTermQidSet [ctor ditto] .
  op _;_ : ConstantSet ConstantSet -> ConstantSet [ctor ditto] .
  op _;_ : NeConstantSet ConstantSet -> NeConstantSet [ctor ditto] .
  op _;_ : VariableSet VariableSet -> VariableSet [ctor ditto] .
  op _;_ : NeVariableSet VariableSet -> NeVariableSet [ctor ditto] .

  --- 1.d - refine QidListSet by Sort/Kind/ListSet
  sort EmptyQidListSet SortListSet KindListSet QidListSet .
  --- ListSet Functor Induced Subsorts
  subsort SortList SortSet < SortListSet .
  subsort KindList KindSet < KindListSet .
  --- ListSet Functor Subsort-Induced Subsorts
  subsort SortListSet KindListSet < TypeListSet < QidListSet .
  --- Preregularity Induced Subsorts
  subsort EmptyQidListSet < SortListSet KindListSet .
  subsort NilQidList < EmptyQidListSet .
  subsort EmptyQidSet < EmptyTypeSet < EmptyQidListSet .
  --- New ListSet Operators
  op _;_ : EmptyQidListSet EmptyQidListSet -> EmptyQidListSet [ctor ditto] .
  op _;_ : SortListSet SortListSet -> SortListSet [ctor ditto] .
  op _;_ : KindListSet KindListSet -> KindListSet [ctor ditto] .

  --- 2.a - refine Ne/Term/List by Ne/Var/Ground/Non/Const/Term/List
  sort GroundNonConstTerm NeGroundNonConstTermList GroundNonConstTermList .
  sort NonConstTerm NeNonConstTermList NonConstTermList .
  sort VarTermList NeVarTermList .
  sort ConstTermList NeConstTermList .
  --- Base Type Subsorts
  subsort GroundNonConstTerm < NonConstTerm < Term .
  subsort GroundNonConstTerm < GroundTerm .
  --- List Functor Induced Subsorts
  subsort GroundNonConstTerm < NeGroundNonConstTermList < GroundNonConstTermList .
  subsort NonConstTerm < NeNonConstTermList < NonConstTermList .
  subsort Variable < NeVarTermList < VarTermList .
  subsort Constant < NeConstTermList < ConstTermList .
  --- List Functor Subsort-Induced Subsorts Set 1
  subsort GroundNonConstTermList < NonConstTermList < TermList .
  subsort ConstTermList VarTermList < TermList .
  subsort NeGroundNonConstTermList < NeNonConstTermList < NeTermList .
  subsort NeConstTermList NeVarTermList < NeTermList .
  --- List Functor Subsort-Induced Subsorts Set 2
  subsort GroundNonConstTermList ConstTermList < GroundTermList .
  subsort NeGroundNonConstTermList NeConstTermList < NeGroundTermList .
  --- Preregularity Induced Subsorts
  subsort EmptyCommaList < VarTermList GroundNonConstTermList NonConstTermList ConstTermList GroundTermList .
  --- New NonConstTerm Operators
  op _[_] : Qid NeGroundTermList -> GroundNonConstTerm [ctor ditto] .
  op _[_] : Qid NeTermList -> NonConstTerm [ctor ditto] .
  --- New TermList Operators
  op _,_ : VarTermList VarTermList -> VarTermList [ctor ditto] .
  op _,_ : NeVarTermList VarTermList -> NeVarTermList [ctor ditto] .
  op _,_ : VarTermList NeVarTermList -> NeVarTermList [ctor ditto] .
  op _,_ : ConstTermList ConstTermList -> ConstTermList [ctor ditto] .
  op _,_ : NeConstTermList ConstTermList -> NeConstTermList [ctor ditto] .
  op _,_ : ConstTermList NeConstTermList -> NeConstTermList [ctor ditto] .
  op _,_ : GroundNonConstTermList GroundNonConstTermList -> GroundNonConstTermList [ctor ditto] .
  op _,_ : NeGroundNonConstTermList GroundNonConstTermList -> NeGroundNonConstTermList [ctor ditto] .
  op _,_ : GroundNonConstTermList NeGroundNonConstTermList -> NeGroundNonConstTermList [ctor ditto] .
  op _,_ : NonConstTermList NonConstTermList -> NonConstTermList [ctor ditto] .
  op _,_ : NeNonConstTermList NonConstTermList -> NeNonConstTermList [ctor ditto] .
  op _,_ : NonConstTermList NeNonConstTermList -> NeNonConstTermList [ctor ditto] .

  --- 2.b - refine GTermList by GTerm and NeGTermList
  sort NonConstGTerm GTerm NeGTermList .
  --- Base Type Subsorts
  subsort Term Context < GTerm .
  subsort NonConstTerm Context < NonConstGTerm < GTerm .
  --- List Functor Induced Subsorts
  subsort GTerm < NeGTermList < GTermList .
  --- List Functor Subsort-Induced Subsorts
  subsort NeCTermList NeTermList < NeGTermList .
  op _[_] : Qid NeGTermList -> NonConstGTerm [ctor ditto] .
  op _,_  : NeGTermList GTermList -> NeGTermList [ctor ditto] .
  op _,_  : GTermList NeGTermList -> NeGTermList [ctor ditto] .

  --- 3 - refine Substitution
  sort VarAssignment ConstAssignment NonConstAssignment GroundNonConstAssignment GroundAssignment .
  sort NoneSubstitution VarSubstitution ConstSubstitution NonConstSubstitution GroundNonConstSubstitution GroundSubstitution .
  --- Substitution Functor Induced Subsorts
  subsort VarAssignment < VarSubstitution .
  subsort ConstAssignment < ConstSubstitution .
  subsort NonConstAssignment < NonConstSubstitution .
  subsort GroundNonConstAssignment < GroundNonConstSubstitution .
  subsort GroundAssignment < GroundSubstitution .
  --- Substitution Functor Subsort-Induced Subsorts Set 1
  subsort VarAssignment ConstAssignment NonConstAssignment GroundAssignment < Assignment .
  subsort NoneSubstitution < VarSubstitution ConstSubstitution NonConstSubstitution GroundSubstitution < Substitution .
  --- Substitution Functor Subsort-Induced Subsorts Set 2
  subsort ConstAssignment GroundNonConstAssignment < GroundAssignment .
  subsort ConstSubstitution GroundNonConstSubstitution < GroundSubstitution .
  --- New Assignment Operators
  op _<-_ : Variable Variable -> VarAssignment [ctor ditto] .
  op _<-_ : Variable Constant -> ConstAssignment [ctor ditto] .
  op _<-_ : Variable GroundTerm -> GroundAssignment [ctor ditto] .
  --- New Substitution Operators
  op none : -> NoneSubstitution [ctor ditto] .
  op _;_  : NoneSubstitution  NoneSubstitution -> NoneSubstitution [ctor ditto] .
  op _;_  : VarSubstitution    VarSubstitution -> VarSubstitution [ctor ditto] .
  op _;_  : ConstSubstitution  ConstSubstitution -> ConstSubstitution [ctor ditto] .
  op _;_  : NonConstSubstitution  NonConstSubstitution -> NonConstSubstitution [ctor ditto] .
  op _;_  : GroundNonConstSubstitution  GroundNonConstSubstitution -> GroundNonConstSubstitution [ctor ditto] .
  op _;_  : GroundSubstitution GroundSubstitution -> GroundSubstitution [ctor ditto] .

  --- 4 - refine OpDecl/Set into Sort/Kind/OpDecl/Set
  sort EmptyOpDeclSet SortOpDecl KindOpDecl SortOpDeclSet KindOpDeclSet .
  subsort SortOpDecl KindOpDecl < OpDecl .
  subsort SortOpDecl < SortOpDeclSet .
  subsort KindOpDecl < KindOpDeclSet .
  subsort EmptyOpDeclSet < SortOpDeclSet KindOpDeclSet < OpDeclSet .
  op (op_:_->_[_].) : Qid SortList Sort AttrSet -> SortOpDecl [ctor ditto] .
  op (op_:_->_[_].) : Qid KindList Kind AttrSet -> KindOpDecl [ctor ditto] .
  op none : -> EmptyOpDeclSet [ctor] .
  op __ : EmptyOpDeclSet EmptyOpDeclSet -> EmptyOpDeclSet [ctor ditto] .
  op __ : SortOpDeclSet SortOpDeclSet -> SortOpDeclSet [ctor ditto] .
  op __ : KindOpDeclSet KindOpDeclSet -> KindOpDeclSet [ctor ditto] .

  --- 5 - refine Condition into Match/Memb/PureEq/Rew/Condition
  sort NilCondition MatchCondition MembCondition PureEqCondition RewCondition .
  subsort NilCondition < MatchCondition MembCondition PureEqCondition < EqCondition .
  subsort NilCondition < RewCondition < Condition .
  op nil : -> NilCondition [ctor ditto] .
  op _=_ : Term Term -> PureEqCondition [ctor ditto] .
  op _:_ : Term Sort -> MembCondition [ctor ditto] .
  op _:=_ : Term Term -> MatchCondition [ctor ditto] .
  op _=>_ : Term Term -> RewCondition [ctor ditto] .
  op _/\_ : NilCondition NilCondition -> NilCondition [ctor ditto] .
  op _/\_ : PureEqCondition PureEqCondition -> PureEqCondition [ctor ditto] .
  op _/\_ : MembCondition MembCondition -> MembCondition [ctor ditto] .
  op _/\_ : MatchCondition MatchCondition -> MatchCondition [ctor ditto] .
  op _/\_ : RewCondition RewCondition -> RewCondition [ctor ditto] .

  --- 6.a - refine MembAx/Set into PureEq/Cond/Uncond/MembAxSet
  sort EmptyMembAxSet PureEqCondMembAx CondMembAx UncondMembAx PureEqCondMembAxSet CondMembAxSet UncondMembAxSet .
  subsort PureEqCondMembAx < CondMembAx < MembAx .
  subsort UncondMembAx < MembAx .
  subsort PureEqCondMembAx < PureEqCondMembAxSet .
  subsort CondMembAx < CondMembAxSet .
  subsort UncondMembAx < UncondMembAxSet .
  subsort EmptyMembAxSet < PureEqCondMembAxSet < CondMembAxSet < MembAxSet .
  subsort EmptyMembAxSet < UncondMembAxSet < MembAxSet .
  op none : -> EmptyMembAxSet [ctor ditto] .
  op (mb_:_[_].) : Term Sort AttrSet -> UncondMembAx [ctor ditto] .
  op (cmb_:_if_[_].) : Term Sort PureEqCondition AttrSet -> PureEqCondMembAx [ctor ditto] .
  op (cmb_:_if_[_].) : Term Sort EqCondition AttrSet -> CondMembAx [ctor ditto] .
  op __ : EmptyMembAxSet EmptyMembAxSet -> EmptyMembAxSet [ctor ditto] .
  op __ : PureEqCondMembAxSet PureEqCondMembAxSet -> PureEqCondMembAxSet [ctor ditto] .
  op __ : CondMembAxSet CondMembAxSet -> CondMembAxSet [ctor ditto] .
  op __ : UncondMembAxSet UncondMembAxSet -> UncondMembAxSet [ctor ditto] .

  --- 6.b - refine Equation/Set into PureEq/Cond/Uncond/EquationSet
  sort EmptyEquationSet PureEqCondEquation CondEquation UncondEquation PureEqCondEquationSet CondEquationSet UncondEquationSet .
  subsort PureEqCondEquation < CondEquation < Equation .
  subsort UncondEquation < Equation .
  subsort PureEqCondEquation < PureEqCondEquationSet .
  subsort CondEquation < CondEquationSet .
  subsort UncondEquation < UncondEquationSet .
  subsort EmptyEquationSet < PureEqCondEquationSet < CondEquationSet < EquationSet .
  subsort EmptyEquationSet < UncondEquationSet < EquationSet .
  op none : -> EmptyEquationSet [ctor ditto] .
  op (eq_=_[_].) : Term Term AttrSet -> UncondEquation [ctor ditto] .
  op (ceq_=_if_[_].) : Term Term PureEqCondition AttrSet -> PureEqCondEquation [ctor ditto] .
  op (ceq_=_if_[_].) : Term Term EqCondition AttrSet -> CondEquation [ctor ditto] .
  op __ : EmptyEquationSet EmptyEquationSet -> EmptyEquationSet [ctor ditto] .
  op __ : PureEqCondEquationSet PureEqCondEquationSet -> PureEqCondEquationSet [ctor ditto] .
  op __ : CondEquationSet CondEquationSet -> CondEquationSet [ctor ditto] .
  op __ : UncondEquationSet UncondEquationSet -> UncondEquationSet [ctor ditto] .

  --- 6.c - refine Rule/Set into PureEq/Rew/Cond/Uncond/RuleSet
  sort EmptyRuleSet NilCondRule PureEqCondRule RewCondRule CondRule UncondRule .
  sort NilCondRuleSet PureEqCondRuleSet RewCondRuleSet CondRuleSet UncondRuleSet .
  subsort NilCondRule < PureEqCondRule RewCondRule < CondRule < Rule .
  subsort UncondRule < Rule .
  subsort NilCondRule < NilCondRuleSet .
  subsort PureEqCondRule < PureEqCondRuleSet .
  subsort RewCondRule < RewCondRuleSet .
  subsort CondRule < CondRuleSet .
  subsort UncondRule < UncondRuleSet .
  subsort EmptyRuleSet < NilCondRuleSet < PureEqCondRuleSet RewCondRuleSet < CondRuleSet < RuleSet .
  subsort EmptyRuleSet < UncondRuleSet < RuleSet .
  op none : -> EmptyRuleSet [ctor ditto] .
  op (rl_=>_[_].) : Term Term AttrSet -> UncondRule [ctor ditto] .
  op (crl_=>_if_[_].) : Term Term NilCondition AttrSet -> NilCondRule [ctor ditto] .
  op (crl_=>_if_[_].) : Term Term PureEqCondition AttrSet -> PureEqCondRule [ctor ditto] .
  op (crl_=>_if_[_].) : Term Term RewCondition AttrSet -> RewCondRule [ctor ditto] .
  op (crl_=>_if_[_].) : Term Term Condition AttrSet -> CondRule [ctor ditto] .
  op __ : EmptyRuleSet EmptyRuleSet -> EmptyRuleSet [ctor ditto] .
  op __ : NilCondRuleSet NilCondRuleSet -> NilCondRuleSet [ctor ditto] .
  op __ : PureEqCondRuleSet PureEqCondRuleSet -> PureEqCondRuleSet [ctor ditto] .
  op __ : RewCondRuleSet RewCondRuleSet -> RewCondRuleSet [ctor ditto] .
  op __ : CondRuleSet CondRuleSet -> CondRuleSet [ctor ditto] .
  op __ : UncondRuleSet UncondRuleSet -> UncondRuleSet [ctor ditto] .
endfm

--- Section 2: Prelude META-LEVEL extended data-structures

fmod TERMSET is
  pr META-LEVEL-REFINEMENT .

  sort EmptyTermSet .
  sort VarTermSet ConstTermSet NonConstTermSet GroundNonConstTermSet GroundTermSet TermSet CTermSet GTermSet .
  sort NeVarTermSet NeConstTermSet NeNonConstTermSet NeGroundNonConstTermSet NeGroundTermSet NeTermSet NeCTermSet NeGTermSet .
  --- Set Functor Induced Subsorts
  subsort Variable < NeVarTermSet < VarTermSet .
  subsort Constant < NeConstTermSet < ConstTermSet .
  subsort NonConstTerm < NeNonConstTermSet < NonConstTermSet .
  subsort GroundNonConstTerm < NeGroundNonConstTermSet < GroundNonConstTermSet .
  subsort GroundTerm < NeGroundTermSet < GroundTermSet .
  subsort Context < NeCTermSet < CTermSet .
  subsort Term < NeTermSet < TermSet .
  subsort GTerm < NeGTermSet < GTermSet .
  --- Set Functor Subsort-Induced Subsorts
  subsort ConstTermSet GroundNonConstTermSet < GroundTermSet < TermSet < GTermSet .
  subsort GroundNonConstTermSet < NonConstTermSet .
  subsort VarTermSet ConstTermSet NonConstTermSet < TermSet < GTermSet .
  subsort CTermSet < GTermSet .
  subsort NeConstTermSet NeGroundNonConstTermSet < NeGroundTermSet < NeTermSet < NeGTermSet .
  subsort NeGroundNonConstTermSet < NeNonConstTermSet .
  subsort NeVarTermSet NeConstTermSet NeNonConstTermSet < NeTermSet < NeGTermSet .
  subsort NeCTermSet < NeGTermSet .
  --- Preregularity Induced Subsorts
  subsort EmptyTermSet < VarTermSet ConstTermSet GroundNonConstTermSet CTermSet .
  --- New TermSet Operators
  op mt : -> EmptyTermSet [ctor] .
  op _|_ : EmptyTermSet EmptyTermSet -> EmptyTermSet [ctor assoc comm id: mt format (d n d d)] .
  op _|_ : VarTermSet VarTermSet -> VarTermSet [ctor ditto] .
  op _|_ : NeVarTermSet VarTermSet -> NeVarTermSet [ctor ditto] .
  op _|_ : ConstTermSet ConstTermSet -> ConstTermSet [ctor ditto] .
  op _|_ : NeConstTermSet ConstTermSet -> NeConstTermSet [ctor ditto] .
  op _|_ : NonConstTermSet NonConstTermSet -> NonConstTermSet [ctor ditto] .
  op _|_ : NeNonConstTermSet NonConstTermSet -> NeNonConstTermSet [ctor ditto] .
  op _|_ : GroundNonConstTermSet GroundNonConstTermSet -> GroundNonConstTermSet [ctor ditto] .
  op _|_ : NeGroundNonConstTermSet GroundNonConstTermSet -> NeGroundNonConstTermSet [ctor ditto] .
  op _|_ : GroundTermSet GroundTermSet -> GroundTermSet [ctor ditto] .
  op _|_ : NeGroundTermSet GroundTermSet -> NeGroundTermSet [ctor ditto] .
  op _|_ : TermSet TermSet -> TermSet [ctor ditto] .
  op _|_ : NeTermSet TermSet -> NeTermSet [ctor ditto] .
  op _|_ : NeCTermSet TermSet -> NeCTermSet [ctor ditto] .
  op _|_ : GTermSet GTermSet -> GTermSet [ctor ditto] .
  op _|_ : NeGTermSet GTermSet -> NeGTermSet [ctor ditto] .
  --- TermSet Idempotency Law
  eq X:GTerm | X:GTerm = X:GTerm .
endfm

fmod TERMLISTSET is
  pr TERMSET .
  sort EmptyTermListSet .
  sort VarTermListSet ConstTermListSet NonConstTermListSet GroundNonConstTermListSet .
  sort GroundTermListSet TermListSet NeCTermListSet GTermListSet .
  --- TermListSet Functor Subsort-Induced Subsorts
  subsort VarTermList VarTermSet < VarTermListSet .
  subsort ConstTermList ConstTermSet < ConstTermListSet .
  subsort NonConstTermList NonConstTermSet < NonConstTermListSet .
  subsort GroundNonConstTermList GroundNonConstTermSet < GroundNonConstTermListSet .
  subsort GroundTermList GroundTermSet < GroundTermListSet .
  subsort TermList TermSet < TermListSet .
  subsort GTermList GTermSet < GTermListSet .
  --- TermListSet Functor Subsort-Induced Subsorts
  subsort ConstTermListSet GroundNonConstTermListSet < GroundTermListSet < TermListSet < GTermListSet .
  subsort GroundNonConstTermListSet < NonConstTermListSet .
  subsort VarTermListSet ConstTermListSet NonConstTermListSet < TermListSet < GTermListSet .
  subsort VarTermListSet < TermListSet < GTermListSet .
  --- Preregularity Induced Subsorts
  subsort EmptyTermSet EmptyCommaList < EmptyTermListSet .
  subsort EmptyTermListSet < VarTermListSet ConstTermListSet GroundNonConstTermListSet .
  --- TermListSet Operators
  op _|_ : EmptyTermListSet EmptyTermListSet -> EmptyTermListSet [ctor ditto] .
  op _|_ : VarTermListSet VarTermListSet -> VarTermListSet [ctor ditto] .
  op _|_ : ConstTermListSet ConstTermListSet -> ConstTermListSet [ctor ditto] .
  op _|_ : NonConstTermListSet NonConstTermListSet -> NonConstTermListSet [ctor ditto] .
  op _|_ : GroundNonConstTermListSet GroundNonConstTermListSet -> GroundNonConstTermListSet [ctor ditto] .
  op _|_ : GroundTermListSet GroundTermListSet -> GroundTermListSet [ctor ditto] .
  op _|_ : TermListSet TermListSet -> TermListSet [ctor ditto] .
  op _|_ : GTermListSet GTermListSet -> GTermListSet [ctor ditto] .
  --- TermListSet Idempotency Law
  eq X:GTermList | X:GTermList = X:GTermList .
  --- NOTE: Because CTermList cannot be defined in a way that preserves the semantics of
  ---       NeCTermList, we cannot lift Context to CTermListSet; that has to be special
  ---       cased as a proper Boolean predicate over the GTermList sort
  --- subsort NeCTermList NeCTermSet < NeCTermListSet .
  --- subsort NeCTermListSet < GTermListSet .
  --- op _|_ : NeCTermListSet NeCTermListSet -> NeCTermListSet [ctor ditto] .
endfm

fmod TERMPAIR is
  pr META-LEVEL-REFINEMENT .
  --- TermPair Sorts
  sort VarTermPair ConstTermPair NonConstTermPair GroundNonConstTermPair GroundTermPair TermPair CTermPair GTermPair .
  --- Pair Functor Subsort-Induced Subsorts
  subsort ConstTermPair GroundNonConstTermPair < GroundTermPair < TermPair < GTermPair .
  subsort GroundNonConstTermPair < NonConstTermPair .
  subsort VarTermPair ConstTermPair NonConstTermPair < TermPair < GTermPair .
  subsort CTermPair < GTermPair .
  --- New TermPair Operators
  op ((_|_)) : Variable Variable -> VarTermPair [ctor] .
  op ((_|_)) : Constant Constant -> ConstTermPair [ctor] .
  op ((_|_)) : NonConstTerm NonConstTerm -> NonConstTermPair [ctor] .
  op ((_|_)) : GroundNonConstTerm GroundNonConstTerm -> GroundNonConstTermPair [ctor] .
  op ((_|_)) : GroundTerm GroundTerm -> GroundTermPair [ctor] .
  op ((_|_)) : Term Term -> TermPair [ctor] .
  op ((_|_)) : Context Context -> CTermPair [ctor] .
  op ((_|_)) : GTerm GTerm -> GTermPair [ctor] .
endfm

--- TODO: add TERMPAIRSET

fmod SUBSTITUTIONSET is
  pr META-LEVEL-REFINEMENT .
  --- Empty Set of Substitutions
  sort EmptySubstitutionSet .
  --- Set of Empty Substitutions (called NoneSubstitution above) Needed for Preregularity
  sort NoneSubstitutionSet NeNoneSubstitutionSet .
  --- Standard Substitution Set Sorts
  sort VarSubstitutionSet ConstSubstitutionSet NonConstSubstitutionSet .
  sort GroundNonConstSubstitutionSet GroundSubstitutionSet SubstitutionSet .
  sort NeVarSubstitutionSet NeConstSubstitutionSet NeNonConstSubstitutionSet .
  sort NeGroundNonConstSubstitutionSet NeGroundSubstitutionSet NeSubstitutionSet .
  --- Set Functor Induced Subsorts
  subsort NoneSubstitution < NeNoneSubstitutionSet < NoneSubstitutionSet .
  subsort VarSubstitution < NeVarSubstitutionSet < VarSubstitutionSet .
  subsort ConstSubstitution < NeConstSubstitutionSet < ConstSubstitutionSet .
  subsort NonConstSubstitution < NeNonConstSubstitutionSet < NonConstSubstitutionSet .
  subsort GroundNonConstSubstitution < NeGroundNonConstSubstitutionSet < GroundNonConstSubstitutionSet .
  subsort GroundSubstitution < NeGroundSubstitutionSet < GroundSubstitutionSet .
  subsort Substitution < NeSubstitutionSet < SubstitutionSet .
  --- Set Functor Subsort-Induced Subsorts Set 1
  subsort EmptySubstitutionSet < NoneSubstitutionSet < VarSubstitutionSet ConstSubstitutionSet NonConstSubstitutionSet GroundSubstitutionSet < SubstitutionSet .
  subsort NeNoneSubstitutionSet < NeVarSubstitutionSet NeConstSubstitutionSet NeNonConstSubstitutionSet NeGroundSubstitutionSet < NeSubstitutionSet .
  --- Set Functor Subsort-Induced Subsorts Set 2
  subsort ConstSubstitutionSet GroundNonConstSubstitutionSet < GroundSubstitutionSet .
  subsort NeConstSubstitutionSet NeGroundNonConstSubstitutionSet < NeGroundSubstitutionSet .
  --- Substitution Set Operators
  op empty : -> EmptySubstitutionSet [ctor] .
  op _|_ : EmptySubstitutionSet EmptySubstitutionSet -> EmptySubstitutionSet [ctor assoc comm id: empty format (d n d d)] .
  op _|_ : NoneSubstitutionSet NoneSubstitutionSet -> NoneSubstitutionSet [ctor ditto] .
  op _|_ : NeNoneSubstitutionSet NoneSubstitutionSet -> NeNoneSubstitutionSet [ctor ditto] .
  op _|_ : VarSubstitutionSet VarSubstitutionSet -> VarSubstitutionSet [ctor ditto] .
  op _|_ : NeVarSubstitutionSet VarSubstitutionSet -> NeVarSubstitutionSet [ctor ditto] .
  op _|_ : ConstSubstitutionSet ConstSubstitutionSet -> ConstSubstitutionSet [ctor ditto] .
  op _|_ : NeConstSubstitutionSet ConstSubstitutionSet -> NeConstSubstitutionSet [ctor ditto] .
  op _|_ : NonConstSubstitutionSet NonConstSubstitutionSet -> NonConstSubstitutionSet [ctor ditto] .
  op _|_ : NeNonConstSubstitutionSet NonConstSubstitutionSet -> NeNonConstSubstitutionSet [ctor ditto] .
  op _|_ : GroundNonConstSubstitutionSet GroundNonConstSubstitutionSet -> GroundNonConstSubstitutionSet [ctor ditto] .
  op _|_ : NeGroundNonConstSubstitutionSet GroundNonConstSubstitutionSet -> NeGroundNonConstSubstitutionSet [ctor ditto] .
  op _|_ : GroundSubstitutionSet GroundSubstitutionSet -> GroundSubstitutionSet [ctor ditto] .
  op _|_ : NeGroundSubstitutionSet GroundSubstitutionSet -> NeGroundSubstitutionSet [ctor ditto] .
  op _|_ : SubstitutionSet SubstitutionSet -> SubstitutionSet [ctor ditto] .
  op _|_ : NeSubstitutionSet SubstitutionSet -> NeSubstitutionSet [ctor ditto] .
  --- Substitution Set Idempotency Law
  eq X:Substitution | X:Substitution = X:Substitution .
endfm

fmod CONDITIONSET is
  pr META-LEVEL-REFINEMENT .
  sort EmptyConditionSet EqConditionSet NeEqConditionSet ConditionSet NeConditionSet .
  --- Set Functor Induced Subsorts
  subsort EqCondition < NeEqConditionSet < EqConditionSet .
  subsort Condition < NeConditionSet < ConditionSet .
  --- Set Functor Subsort-Induced Subsorts
  subsort NeEqConditionSet < NeConditionSet .
  subsort EqConditionSet < ConditionSet .
  --- For Future Preregularity Needs
  subsort EmptyConditionSet < EqConditionSet .
  --- New ConditionSet Operators
  op empty : -> EmptyConditionSet .
  op _|_ : EmptyConditionSet EmptyConditionSet -> EmptyConditionSet [ctor assoc comm id: empty format (d n d d)] .
  op _|_ : EqConditionSet EqConditionSet -> EqConditionSet [ctor ditto] .
  op _|_ : NeEqConditionSet EqConditionSet -> NeEqConditionSet [ctor ditto] .
  op _|_ : ConditionSet ConditionSet -> ConditionSet [ctor ditto] .
  op _|_ : NeConditionSet ConditionSet -> NeConditionSet [ctor ditto] .
endfm

fmod ATTRSET2 is
  pr META-LEVEL-REFINEMENT .
  sort EmptyAttrSet2 NeAttrSet2 AttrSet2 .
  --- Set Functor Induced Subsorts
  subsort AttrSet < NeAttrSet2 < AttrSet2 .
  --- For Future Preregularity Needs
  subsort EmptyAttrSet2 < AttrSet2 .
  --- New AttrSet2 Operators
  op empty : -> EmptyAttrSet2 [ctor] .
  op _|_ : EmptyAttrSet2 EmptyAttrSet2 -> EmptyAttrSet2 [ctor assoc comm id: empty format (d n d d)] .
  op _|_ : AttrSet2 AttrSet2 -> AttrSet2 [ctor ditto] .
  op _|_ : NeAttrSet2 AttrSet2 -> NeAttrSet2 [ctor ditto] .
  --- AttrSet2 Idempotency Law
  eq X:AttrSet | X:AttrSet = X:AttrSet .
endfm

fmod QID? is
  pr META-LEVEL .
  sort Qid? .
  subsort Qid < Qid? .
  op noQid : -> Qid? [ctor] .
endfm

fmod GTERM? is
  pr META-LEVEL-REFINEMENT .
  sort GTerm? .
  subsort GTerm < GTerm? .
  op noTerm : -> GTerm? [ctor] .
endfm

--- Section 3: Prelude META-LEVEL projection/injection functions

fmod META-LEVEL-PROJECTIONS-SIG is
  pr META-LEVEL-REFINEMENT .
  pr TERMSET .
  pr TERMLISTSET .
  pr SUBSTITUTIONSET .
  pr ATTRSET2 .
  pr CONDITIONSET .
  pr QID? .
  pr GTERM? .

  --- individual
  op tq-type : TermQid -> Type .
  op tq-name : TermQid -> Qid .
  --- set liftings
  op tq-type : TermQidSet -> TypeSet .
  op tq-name : TermQidSet -> QidSet .
  --- list liftings
  op tq-type : TermQidList -> TypeList .
  op tq-name : TermQidList -> QidList .

  --- individual
  op sb-dom : Substitution -> VariableSet .
  op sb-codom : GroundSubstitution -> GroundTermSet .
  op sb-codom : Substitution -> TermSet .

  --- individual
  op tr-root : GTerm -> Qid .
  op tr-children : Term -> TermList .
  op tr-children : NonConstTerm -> NeTermList .
  op tr-children : GTerm -> GTermList .
  op tr-children : NonConstGTerm -> NeGTermList .
  op tr-subterm  : GTerm NatList -> GTerm? .
  --- set lifting
  op tr-root : GTerm -> QidSet .
  op tr-children : TermSet -> TermListSet .
  op tr-children : GTermSet -> GTermListSet .

  --- individual
  op op-name : OpDecl -> Qid .
  op op-arity : OpDecl -> TypeList .
  op op-arity : SortOpDecl -> SortList .
  op op-arity : KindOpDecl -> KindList .
  op op-coarity : OpDecl -> Type .
  op op-coarity : SortOpDecl -> Sort .
  op op-coarity : KindOpDecl -> Kind .
  op op-attrs : OpDecl -> AttrSet .
  op op-label : OpDecl -> QidSet .
  --- set lifting
  op op-name : OpDeclSet -> QidSet .
  op op-arity : EmptyOpDeclSet -> EmptyQidListSet .
  op op-arity : OpDeclSet -> QidListSet .
  op op-arity : SortOpDeclSet -> SortListSet .
  op op-arity : KindOpDeclSet -> KindListSet .
  op op-coarity : EmptyOpDeclSet -> EmptyQidSet .
  op op-coarity : OpDeclSet -> TypeSet .
  op op-coarity : SortOpDeclSet -> SortSet .
  op op-coarity : KindOpDeclSet -> KindSet .
  op op-attrs : OpDeclSet -> AttrSet2 .
  op op-label : OpDecl -> QidSet .

  --- individual
  op mb-term : MembAx -> Term .
  op mb-sort : MembAx -> Sort .
  op mb-cond : CondMembAx -> EqCondition .
  op mb-attrs : MembAx -> AttrSet .
  op mb-label : MembAx -> QidSet .
  --- set lifting
  op mb-term : MembAxSet -> TermSet .
  op mb-sort : MembAxSet -> SortSet .
  op mb-cond : CondMembAxSet -> EqConditionSet .
  op mb-attrs : MembAxSet -> AttrSet2 .
  op mb-label : MembAxSet -> QidSet .

  --- individual
  op eq-lhs : Equation -> Term .
  op eq-rhs : Equation -> Term .
  op eq-cond : CondEquation -> EqCondition .
  op eq-attrs : Equation -> AttrSet .
  op eq-label : Equation -> QidSet .
  --- set lifting
  op eq-lhs : Equation -> TermSet .
  op eq-rhs : Equation -> TermSet .
  op eq-cond : CondEquation -> EqConditionSet .
  op eq-attrs : Equation -> AttrSet2 .
  op eq-label : Equation -> QidSet .

  --- individual
  op rl-lhs : Rule -> Term .
  op rl-rhs : Rule -> Term .
  op rl-cond : CondRule -> EqCondition .
  op rl-attrs : Rule -> AttrSet .
  op rl-label : Rule -> QidSet .
  --- set lifting
  op rl-lhs : Rule -> TermSet .
  op rl-rhs : Rule -> TermSet .
  op rl-cond : CondRule -> EqConditionSet .
  op rl-attrs : Rule -> AttrSet2 .
  op rl-label : Rule -> QidSet .

  --- module
  op md-sorts : Module -> SortSet .
  op md-subsorts : Module -> SubsortDeclSet .
  op md-ops : Module -> OpDeclSet .
  op md-mbs : Module -> MembAxSet .
  op md-rls : Module -> RuleSet .
endfm
