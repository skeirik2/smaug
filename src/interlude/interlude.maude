--- file: interlude.maude
--- reqs: prelude.maude
--- note: a value-added prelude; the interlude is divided into several sections
--- Overview
--- Section 1: Prelude META-LEVEL sort refinements
--- Section 2: Prelude META-LEVEL extended data-structures
--- Section 3: Prelude META-LEVEL projection/injection functions
--- Section 4: Prelude META-LEVEL predicates/auxiliary functions

--- Section 1: Prelude META-LEVEL sort refinements

fmod META-LEVEL-REFINEMENT is
  pr META-LEVEL .

  --- 0.a - refine QidList by Ne/Variable/Constant/TermQidList
  sort VariableList ConstantList TermQidList .
  sort NeVariableList NeConstantList NeTermQidList .
  subsort Variable < NeVariableList < VariableList .
  subsort Constant < NeConstantList < ConstantList .
  subsort TermQid < NeTermQidList < TermQidList .
  subsort NilTypeList < ConstantList VariableList .
  subsort VariableList ConstantList < TermQidList .
  subsort NeVariableList NeConstantList < NeTermQidList .
  subsort TermQidList < QidList .
  subsort NeTermQidList < NeQidList .
  op __ : TermQidList TermQidList -> TermQidList [ctor ditto] .
  op __ : NeTermQidList TermQidList -> NeTermQidList [ctor ditto] .
  op __ : TermQidList NeTermQidList -> NeTermQidList [ctor ditto] .
  op __ : ConstantList ConstantList -> ConstantList [ctor ditto] .
  op __ : NeConstantList ConstantList -> NeConstantList [ctor ditto] .
  op __ : ConstantList NeConstantList -> NeConstantList [ctor ditto] .
  op __ : VariableList VariableList -> VariableList [ctor ditto] .
  op __ : NeVariableList VariableList -> NeVariableList [ctor ditto] .
  op __ : VariableList NeVariableList -> NeVariableList [ctor ditto] .

  --- 1.a - refine Substitution
  sort VarAssignment ConstAssignment GroundAssignment .
  sort NoneSubstitution VarSubstitution ConstSubstitution GroundSubstitution .
  subsort ConstAssignment < GroundAssignment .
  subsort VarAssignment ConstAssignment GroundAssignment < Assignment .
  subsort NoneSubstitution < VarSubstitution ConstSubstitution GroundSubstitution < Substitution .
  subsort ConstSubstitution < GroundSubstitution .
  subsort VarAssignment < VarSubstitution .
  subsort ConstAssignment < ConstSubstitution .
  subsort GroundAssignment < GroundSubstitution .
  op _<-_ : Variable Variable -> VarAssignment [ctor ditto] .
  op _<-_ : Variable Constant -> ConstAssignment [ctor ditto] .
  op _<-_ : Variable GroundTerm -> GroundAssignment [ctor ditto] .
  op none : -> NoneSubstitution [ctor ditto] .
  op _;_  : NoneSubstitution  NoneSubstitution -> NoneSubstitution [ctor ditto] .
  op _;_  : VarSubstitution    VarSubstitution -> VarSubstitution [ctor ditto] .
  op _;_  : ConstSubstitution  ConstSubstitution -> ConstSubstitution [ctor ditto] .
  op _;_  : GroundSubstitution GroundSubstitution -> GroundSubstitution [ctor ditto] .

  --- 1.b - refine GTermList by GTerm and NeGTermList
  sort GTerm NeGTermList .
  subsort Term Context < GTerm < NeGTermList < GTermList .
  subsort NeCTermList NeTermList < NeGTermList .
  op _,_ : NeGTermList GTermList -> NeGTermList [ctor ditto] .
  op _,_ : GTermList NeGTermList -> NeGTermList [ctor ditto] .
  
  --- 1.c - refine Ne/TypeList by Ne/Sort/Kind/List
  sort NilTypeList NeSortList NeKindList SortList KindList .
  subsort Sort < NeSortList < SortList .
  subsort Kind < NeKindList < KindList .
  subsort NeSortList NeKindList < NeTypeList .
  subsort NilTypeList < SortList KindList < TypeList .
  op nil : -> NilTypeList [ctor ditto] .
  op __ : NilTypeList NilTypeList -> NilTypeList [ctor ditto] .
  op __ : SortList SortList -> SortList [ctor ditto] .
  op __ : NeSortList SortList -> NeSortList [ctor ditto] .
  op __ : SortList NeSortList -> NeSortList [ctor ditto] .
  op __ : KindList KindList -> KindList [ctor ditto] .
  op __ : NeKindList KindList -> NeKindList [ctor ditto] .
  op __ : KindList NeKindList -> NeKindList [ctor ditto] .

  --- 1.d - refine TypeListSet by Sort/Kind/ListSet
  sort EmptyTypeListSet SortListSet KindListSet .
  subsort SortList SortSet < SortListSet .
  subsort KindList KindSet < KindListSet .
  subsort NilTypeList EmptyTypeSet < EmptyTypeListSet < SortListSet KindListSet < TypeListSet .
  op _;_ : EmptyTypeListSet EmptyTypeListSet -> EmptyTypeListSet [ctor ditto] .
  op _;_ : SortListSet SortListSet -> SortListSet [ctor ditto] .
  op _;_ : KindListSet KindListSet -> KindListSet [ctor ditto] .

  --- 1.e - refine OpDecl/Set into Sort/Kind/OpDecl/Set
  sort EmptyOpDeclSet SortOpDecl KindOpDecl SortOpDeclSet KindOpDeclSet .
  subsort SortOpDecl KindOpDecl < OpDecl .
  subsort SortOpDecl < SortOpDeclSet .
  subsort KindOpDecl < KindOpDeclSet .
  subsort EmptyOpDeclSet < SortOpDeclSet KindOpDeclSet < OpDeclSet .
  op (op_:_->_[_].) : Qid SortList Sort AttrSet -> SortOpDecl [ctor ditto] .
  op (op_:_->_[_].) : Qid KindList Kind AttrSet -> KindOpDecl [ctor ditto] .
  op none : -> EmptyOpDeclSet [ctor] .
  op __ : EmptyOpDeclSet EmptyOpDeclSet -> EmptyOpDeclSet [ctor ditto] .
  op __ : SortOpDeclSet SortOpDeclSet -> SortOpDeclSet [ctor ditto] .
  op __ : KindOpDeclSet KindOpDeclSet -> KindOpDeclSet [ctor ditto] .

  --- 1.f - refine Condition into Match/Memb/PureEq/Rew/Condition
  sort NilCondition MatchCondition MembCondition PureEqCondition RewCondition .
  subsort NilCondition < MatchCondition MembCondition PureEqCondition < EqCondition .
  subsort NilCondition < RewCondition < Condition .
  op nil : -> NilCondition [ctor ditto] .
  op _=_ : Term Term -> PureEqCondition [ctor ditto] .
  op _:_ : Term Sort -> MembCondition [ctor ditto] .
  op _:=_ : Term Term -> MatchCondition [ctor ditto] .
  op _=>_ : Term Term -> RewCondition [ctor ditto] .
  op _/\_ : NilCondition NilCondition -> NilCondition [ctor ditto] .
  op _/\_ : PureEqCondition PureEqCondition -> PureEqCondition [ctor ditto] .
  op _/\_ : MembCondition MembCondition -> MembCondition [ctor ditto] .
  op _/\_ : MatchCondition MatchCondition -> MatchCondition [ctor ditto] .
  op _/\_ : RewCondition RewCondition -> RewCondition [ctor ditto] .

  --- 1.g - refine MembAx/Set into PureEq/Cond/Uncond/MembAxSet
  sort EmptyMembAxSet PureEqCondMembAx CondMembAx UncondMembAx PureEqCondMembAxSet CondMembAxSet UncondMembAxSet .
  subsort PureEqCondMembAx < CondMembAx < MembAx .
  subsort UncondMembAx < MembAx .
  subsort PureEqCondMembAx < PureEqCondMembAxSet .
  subsort CondMembAx < CondMembAxSet .
  subsort UncondMembAx < UncondMembAxSet .
  subsort EmptyMembAxSet < PureEqCondMembAxSet < CondMembAxSet < MembAxSet .
  subsort EmptyMembAxSet < UncondMembAxSet < MembAxSet .
  op none : -> EmptyMembAxSet [ctor ditto] .
  op (mb_:_[_].) : Term Sort AttrSet -> UncondMembAx [ctor ditto] .
  op (cmb_:_if_[_].) : Term Sort PureEqCondition AttrSet -> PureEqCondMembAx [ctor ditto] .
  op (cmb_:_if_[_].) : Term Sort EqCondition AttrSet -> CondMembAx [ctor ditto] .
  op __ : EmptyMembAxSet EmptyMembAxSet -> EmptyMembAxSet [ctor ditto] .
  op __ : PureEqCondMembAxSet PureEqCondMembAxSet -> PureEqCondMembAxSet [ctor ditto] .
  op __ : CondMembAxSet CondMembAxSet -> CondMembAxSet [ctor ditto] .
  op __ : UncondMembAxSet UncondMembAxSet -> UncondMembAxSet [ctor ditto] .

  --- 1.h - refine Equation/Set into PureEq/Cond/Uncond/EquationSet
  sort EmptyEquationSet PureEqCondEquation CondEquation UncondEquation PureEqCondEquationSet CondEquationSet UncondEquationSet .
  subsort PureEqCondEquation < CondEquation < Equation .
  subsort UncondEquation < Equation .
  subsort PureEqCondEquation < PureEqCondEquationSet .
  subsort CondEquation < CondEquationSet .
  subsort UncondEquation < UncondEquationSet .
  subsort EmptyEquationSet < PureEqCondEquationSet < CondEquationSet < EquationSet .
  subsort EmptyEquationSet < UncondEquationSet < EquationSet .
  op none : -> EmptyEquationSet [ctor ditto] .
  op (eq_=_[_].) : Term Term AttrSet -> UncondEquation [ctor ditto] .
  op (ceq_=_if_[_].) : Term Term PureEqCondition AttrSet -> PureEqCondEquation [ctor ditto] .
  op (ceq_=_if_[_].) : Term Term EqCondition AttrSet -> CondEquation [ctor ditto] .
  op __ : EmptyEquationSet EmptyEquationSet -> EmptyEquationSet [ctor ditto] .
  op __ : PureEqCondEquationSet PureEqCondEquationSet -> PureEqCondEquationSet [ctor ditto] .
  op __ : CondEquationSet CondEquationSet -> CondEquationSet [ctor ditto] .
  op __ : UncondEquationSet UncondEquationSet -> UncondEquationSet [ctor ditto] .

  --- 1.i - refine Rule/Set into PureEq/Rew/Cond/Uncond/RuleSet
  sort EmptyRuleSet NilCondRule PureEqCondRule RewCondRule CondRule UncondRule .
  sort NilCondRuleSet PureEqCondRuleSet RewCondRuleSet CondRuleSet UncondRuleSet .
  subsort NilCondRule < PureEqCondRule RewCondRule < CondRule < Rule .
  subsort UncondRule < Rule .
  subsort NilCondRule < NilCondRuleSet .
  subsort PureEqCondRule < PureEqCondRuleSet .
  subsort RewCondRule < RewCondRuleSet .
  subsort CondRule < CondRuleSet .
  subsort UncondRule < UncondRuleSet .
  subsort EmptyRuleSet < NilCondRuleSet < PureEqCondRuleSet RewCondRuleSet < CondRuleSet < RuleSet .
  subsort EmptyRuleSet < UncondRuleSet < RuleSet .
  op none : -> EmptyRuleSet [ctor ditto] .
  op (rl_=>_[_].) : Term Term AttrSet -> UncondRule [ctor ditto] .
  op (crl_=>_if_[_].) : Term Term NilCondition AttrSet -> NilCondRule [ctor ditto] .
  op (crl_=>_if_[_].) : Term Term PureEqCondition AttrSet -> PureEqCondRule [ctor ditto] .
  op (crl_=>_if_[_].) : Term Term RewCondition AttrSet -> RewCondRule [ctor ditto] .
  op (crl_=>_if_[_].) : Term Term Condition AttrSet -> CondRule [ctor ditto] .
  op __ : EmptyRuleSet EmptyRuleSet -> EmptyRuleSet [ctor ditto] .
  op __ : NilCondRuleSet NilCondRuleSet -> NilCondRuleSet [ctor ditto] .
  op __ : PureEqCondRuleSet PureEqCondRuleSet -> PureEqCondRuleSet [ctor ditto] .
  op __ : RewCondRuleSet RewCondRuleSet -> RewCondRuleSet [ctor ditto] .
  op __ : CondRuleSet CondRuleSet -> CondRuleSet [ctor ditto] .
  op __ : UncondRuleSet UncondRuleSet -> UncondRuleSet [ctor ditto] .
endfm

--- Section 2: Prelude META-LEVEL extended data-structures

fmod TERMSET is
  pr META-LEVEL-REFINEMENT .

  sort EmptyTermSet .
  sort GroundTermSet TermSet GTermSet .
  sort NeGroundTermSet NeTermSet NeCTermSet NeGTermSet .
  subsort GroundTerm < NeGroundTermSet < GroundTermSet .
  subsort Context < NeCTermSet .
  subsort Term < NeTermSet < TermSet .
  subsort GTerm < NeGTermSet < GTermSet .
  subsort EmptyTermSet < GroundTermSet < TermSet < GTermSet .
  subsort NeGroundTermSet < NeTermSet < NeGTermSet .
  subsort NeCTermSet NeTermSet < NeGTermSet .

  op mt : -> EmptyTermSet [ctor] .
  op _|_ : EmptyTermSet EmptyTermSet -> EmptyTermSet [ctor assoc comm id: mt format (d n d d)] .
  op _|_ : GroundTermSet GroundTermSet -> GroundTermSet [ctor ditto] .
  op _|_ : NeGroundTermSet GroundTermSet -> NeGroundTermSet [ctor ditto] .
  op _|_ : TermSet TermSet -> TermSet [ctor ditto] .
  op _|_ : NeTermSet TermSet -> NeTermSet [ctor ditto] .
  op _|_ : NeCTermSet TermSet -> NeCTermSet [ctor ditto] .
  op _|_ : GTermSet GTermSet -> GTermSet [ctor ditto] .
  op _|_ : NeGTermSet GTermSet -> NeGTermSet [ctor ditto] .

  eq X:GTerm | X:GTerm = X:GTerm .
endfm

fmod SUBSTITUTIONSET is
  pr META-LEVEL-REFINEMENT .

  sort EmptySubstitutionSet NoneSubstitutionSet VarSubstitutionSet ConstSubstitutionSet GroundSubstitutionSet SubstitutionSet .
  sort NeNoneSubstitutionSet NeVarSubstitutionSet NeConstSubstitutionSet NeGroundSubstitutionSet NeSubstitutionSet .
  subsort NoneSubstitution < NeNoneSubstitutionSet < NoneSubstitutionSet .
  subsort VarSubstitution < NeVarSubstitutionSet < VarSubstitutionSet .
  subsort ConstSubstitution < NeConstSubstitutionSet < ConstSubstitutionSet .
  subsort GroundSubstitution < NeGroundSubstitutionSet < GroundSubstitutionSet .
  subsort Substitution < NeSubstitutionSet < SubstitutionSet .
  subsort ConstSubstitutionSet < GroundSubstitutionSet .
  subsort NeConstSubstitutionSet < NeGroundSubstitutionSet .
  subsort EmptySubstitutionSet < NoneSubstitutionSet < VarSubstitutionSet ConstSubstitutionSet GroundSubstitutionSet < SubstitutionSet .
  subsort NeNoneSubstitutionSet < NeVarSubstitutionSet NeConstSubstitutionSet NeGroundSubstitutionSet < NeSubstitutionSet .

  op empty : -> EmptySubstitutionSet [ctor] .
  op _|_ : EmptySubstitutionSet EmptySubstitutionSet -> EmptySubstitutionSet [ctor assoc comm id: empty format (d n d d)] .
  op _|_ : NoneSubstitutionSet NoneSubstitutionSet -> NoneSubstitutionSet [ctor ditto] .
  op _|_ : NeNoneSubstitutionSet NoneSubstitutionSet -> NeNoneSubstitutionSet [ctor ditto] .
  op _|_ : VarSubstitutionSet VarSubstitutionSet -> VarSubstitutionSet [ctor ditto] .
  op _|_ : NeVarSubstitutionSet VarSubstitutionSet -> NeVarSubstitutionSet [ctor ditto] .
  op _|_ : ConstSubstitutionSet ConstSubstitutionSet -> ConstSubstitutionSet [ctor ditto] .
  op _|_ : NeConstSubstitutionSet ConstSubstitutionSet -> NeConstSubstitutionSet [ctor ditto] .
  op _|_ : GroundSubstitutionSet GroundSubstitutionSet -> GroundSubstitutionSet [ctor ditto] .
  op _|_ : NeGroundSubstitutionSet GroundSubstitutionSet -> NeGroundSubstitutionSet [ctor ditto] .
  op _|_ : SubstitutionSet SubstitutionSet -> SubstitutionSet [ctor ditto] .
  op _|_ : NeSubstitutionSet SubstitutionSet -> NeSubstitutionSet [ctor ditto] .

  eq X:Substitution | X:Substitution = X:Substitution .
endfm

fmod ATTRSET2 is
  pr META-LEVEL .
  sort EmptyAttrSet2 NeAttrSet2 AttrSet2 .
  subsort AttrSet < NeAttrSet2 < AttrSet2 .
  subsort EmptyAttrSet2 < AttrSet2 .
  op empty : -> EmptyAttrSet2 [ctor] .
  op _|_ : EmptyAttrSet2 EmptyAttrSet2 -> EmptyAttrSet2 [ctor assoc comm id: empty format (d n d d)] .
  op _|_ : AttrSet2 AttrSet2 -> AttrSet2 [ctor ditto] .
  op _|_ : NeAttrSet2 AttrSet2 -> NeAttrSet2 [ctor ditto] .

  eq X:AttrSet | X:AttrSet = X:AttrSet .
endfm
